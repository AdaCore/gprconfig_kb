<?xml version="1.0" ?>
<gprconfig>
   <!--  This package provides adjustments for cross compilers -->

   <!-- AAMP executable have extension .axe -->
   <configuration>
     <targets>
       <target name="aamp" />
     </targets>
     <config>
   package Builder is
      for Executable_Suffix use ".axe";
   end Builder;
     </config>
   </configuration>

   <configuration>
     <targets>
       <target name="dotnet" />
       <target name="^.*-pc-mingw32$" />
     </targets>
     <config>
   package Builder is
      for Executable_Suffix use ".exe";
   end Builder;
     </config>
   </configuration>

   <!-- ppc-elf executables do not have any extension -->
   <configuration>
     <targets>
       <target name="^powerpc-elf$" />
       <target name="^powerpc-eabispe$" />
       <target name="^avr$" />
       <target name="^leon-elf$" />
       <target name="^leon3-elf$" />
       <target name="^.*-elinos-linux$" />
     </targets>
     <config>
   package Builder is
      for Executable_Suffix use "";
   end Builder;
     </config>
   </configuration>

   <!-- Import WIND_BASE on VxWorks 5 & 6 targets.  -->
   <configuration>
     <targets>
       <target name="^powerpc-wrs-vxworks.*$" />
       <target name="^ppc-vx6.*$" />
       <target name="^e500v2-vx6.*$" />
       <target name="^i.86-wrs-vxworks.*$" />
     </targets>
     <config>
   Wind_Base := external ("WIND_BASE");
     </config>
   </configuration>

   <!-- Forbid mixing kernel and rtp.  -->
   <configuration>
     <compilers><compiler runtime="kernel" /></compilers>
     <compilers><compiler runtime="kernel-smp" /></compilers>
     <compilers><compiler runtime="kernel-sjlj" /></compilers>
     <compilers><compiler runtime="rtp" /></compilers>
     <compilers><compiler runtime="rtp-smp" /></compilers>
     <compilers><compiler runtime="ravenscar-cert" /></compilers>
     <config></config>
   </configuration>

   <!-- vx6/kernel executables have a .out extension -->
   <configuration>
     <compilers>
       <compiler name="GNAT" runtime="kernel" />
       <compiler name="GNAT" runtime="default" />
       <compiler name="GCC-WRS6" runtime="kernel" />
       <compiler name="GCC-WRS6" runtime="kernel-sjlj" />
       <compiler name="GCC-WRS6" runtime="kernel-smp" />
       <compiler name="GCC-WRS6E500V2" runtime="kernel" />
       <compiler name="GCC-WRS6E500V2" runtime="kernel-sjlj" />
       <compiler name="GCC-WRS6E500V2" runtime="kernel-smp" />
       <compiler name="GCC-WRS6CERT" runtime="kernel" />
       <compiler name="GCC-WRS6CERT" runtime="ravenscar-cert" />
       <compiler name="G++-WRS6" runtime="kernel" />
       <compiler name="G++-WRS6" runtime="kernel-sjlj" />
       <compiler name="G++-WRS6" runtime="kernel-smp" />
       <compiler name="G++-WRS6E500V2" runtime="kernel" />
       <compiler name="G++-WRS6E500V2" runtime="kernel-sjlj" />
       <compiler name="G++-WRS6E500V2" runtime="kernel-smp" />
       <compiler name="G++-WRS6CERT" runtime="kernel" />
       <compiler name="G++-WRS6CERT" runtime="ravenscar-cert" />
       <compiler name="GCC-WRS5" />
     </compilers>
     <targets>
       <target name=".*-wrs-vxworks" />
     </targets>
     <config>
   package Builder is
      for Executable_Suffix use ".out";
   end Builder;
     </config>
   </configuration>

   <!-- vx6/rtp executables have a .vxe extension and need -mrtp -->
   <configuration>
     <compilers>
       <compiler name="GNAT" runtime="rtp" />
       <compiler name="GCC-WRS6" runtime="rtp" />
       <compiler name="GCC-WRS6E500V2" runtime="rtp" />
       <compiler name="GCC-WRS6" runtime="rtp-smp" />
       <compiler name="GCC-WRS6E500V2" runtime="rtp-smp" />
       <compiler name="G++-WRS6" runtime="rtp" />
       <compiler name="G++-WRS6E500V2" runtime="rtp" />
       <compiler name="G++-WRS6" runtime="rtp-smp" />
       <compiler name="G++-WRS6E500V2" runtime="rtp-smp" />
     </compilers>
     <config>
   package Builder is
      for Executable_Suffix use ".vxe";
   end Builder;
     </config>
   </configuration>

   <configuration>
     <compilers>
       <compiler name="GNAT" runtime="rtp" />
       <compiler name="GNAT" runtime="rtp-smp" />
     </compilers>
     <config>
   package Compiler is
      for Leading_Required_Switches ("Ada") use
        Compiler'Leading_Required_Switches ("Ada") &amp; ("-mrtp");
   end Compiler;

   package Linker is
      for Required_Switches use
	Linker'Required_Switches &amp; ("-mrtp");
   end Linker;
     </config>
   </configuration>

   <configuration>
     <compilers>
       <compiler name="GCC-WRS6" runtime="rtp" />
       <compiler name="GCC-WRS6E500V2" runtime="rtp" />
       <compiler name="GCC-WRS6" runtime="rtp-smp" />
       <compiler name="GCC-WRS6E500V2" runtime="rtp-smp" />
     </compilers>
     <config>
   package Compiler is
      for Leading_Required_Switches ("C") use
        Compiler'Leading_Required_Switches ("C") &amp; ("-mrtp")
        &amp; ("-I" &amp; Wind_Base &amp; "/target/usr/h");
   end Compiler;
     </config>
   </configuration>

   <configuration>
     <compilers>
       <compiler name="G++-WRS6" runtime="rtp" />
       <compiler name="G++-WRS6E500V2" runtime="rtp" />
       <compiler name="G++-WRS6" runtime="rtp-smp" />
       <compiler name="G++-WRS6E500V2" runtime="rtp-smp" />
     </compilers>
     <config>
   package Compiler is
      for Leading_Required_Switches ("C++") use
        Compiler'Leading_Required_Switches ("C++") &amp; ("-mrtp")
        &amp; ("-I" &amp; Wind_Base &amp; "/target/usr/h");
   end Compiler;
     </config>
   </configuration>

   <configuration>
     <compilers>
       <compiler name="GCC-WRS6" runtime="kernel" />
       <compiler name="GCC-WRS6" runtime="kernel-sjlj" />
       <compiler name="GCC-WRS6" runtime="kernel-mp" />
       <compiler name="GCC-WRS6E500V2" runtime="kernel" />
       <compiler name="GCC-WRS6E500V2" runtime="kernel-sjlj" />
       <compiler name="GCC-WRS6E500V2" runtime="kernel-mp" />
       <compiler name="GCC-WRS6CERT" runtime="kernel" />
       <compiler name="GCC-WRS6CERT" runtime="ravenscar-cert" />
     </compilers>
     <config>
   package Compiler is
      for Leading_Required_Switches ("C") use
        Compiler'Leading_Required_Switches ("C")
        &amp; ("-I" &amp; Wind_Base &amp; "/target/h");
   end Compiler;
     </config>
   </configuration>

   <configuration>
     <compilers>
       <compiler name="G++-WRS6" runtime="kernel" />
       <compiler name="G++-WRS6" runtime="kernel-smp" />
       <compiler name="G++-WRS6" runtime="kernel-sjlj" />
       <compiler name="G++-WRS6E500V2" runtime="kernel" />
       <compiler name="G++-WRS6E500V2" runtime="kernel-smp" />
       <compiler name="G++-WRS6E500V2" runtime="kernel-sjlj" />
       <compiler name="G++-WRS6CERT" runtime="kernel" />
       <compiler name="G++-WRS6CERT" runtime="ravenscar-cert" />
     </compilers>
     <config>
   package Compiler is
      for Leading_Required_Switches ("C++") use
        Compiler'Leading_Required_Switches ("C++")
        &amp; ("-I" &amp; Wind_Base &amp; "/target/h");
   end Compiler;
     </config>
   </configuration>

   <configuration>
     <compilers>
       <compiler name="GCC-WRS5" runtime="kernel" />
     </compilers>
     <config>
   package Compiler is
      for Leading_Required_Switches ("C") use
        Compiler'Leading_Required_Switches ("C")
        &amp; ("-I" &amp; Wind_Base &amp; "/target/h");
   end Compiler;
     </config>
   </configuration>

   <!-- vx653 & vxMILS executables have a .out extension.  -->
   <configuration>
     <targets>
       <target name="^.*-wrs-vxworksae$" />
       <target name="^.*-wrs-vxworksmils$" />
     </targets>
     <config>
   package Builder is
      for Executable_Suffix use ".out";
   end Builder;
     </config>
   </configuration>

   <!--  Use WindRiver archiver -->
   <configuration>
     <targets>
       <target name="^powerpc-wrs-vxworks.*$" />
       <target name="^e500v2-wrs-vxworks.*$" />
     </targets>
     <config>
   for Archive_Builder  use ("arppc", "cr");
   for Archive_Builder_Append_Option use ("q");
   for Archive_Indexer  use ("ranlibppc");
   for Archive_Suffix   use ".a";
     </config>
   </configuration>

   <configuration>
     <targets>
       <target name="^i586-wrs-vxworks.*$" />
     </targets>
     <config>
   for Archive_Builder  use ("arpentium", "cr");
   for Archive_Builder_Append_Option use ("q");
   for Archive_Indexer  use ("ranlibpentium");
   for Archive_Suffix   use ".a";
     </config>
   </configuration>

   <!--  Set prefix of gnatbind -->
   <configuration>
     <targets>
       <target name="^.*-wrs-vxworks.*$" />
       <target name="^.*-elf-lynx.*$" />
       <target name="^powerpc-elf$" />
       <target name="^powerpc-eabispe$" />
       <target name="^erc32-elf$" />
       <target name="^leon-elf$" />
       <target name="^leon3-elf$" />
       <target name="^arm-elf$" />
       <target name="^avr$" />
       <target name="^.*-elinos-linux$" />
       <target name="^dotnet$" />
       <target name="^.*-pc-mingw32$" />
     </targets>
     <compilers>
       <compiler name="GNAT" />
       <compiler name="GNAT_DOTNET" />
     </compilers>
     <config>
   package Binder is
      for Required_Switches ("Ada") use
          Binder'Required_Switches ("Ada") &amp;
          ("gnatbind_prefix=${PREFIX(ada)}");
   end Binder;
     </config>
   </configuration>

</gprconfig>
