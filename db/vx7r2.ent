<!ENTITY compiler_description_clang_c
'
  <compiler_description>
    <name>CLANG-C-&this_target;</name>
    <executable>clang</executable>
    <version>
      <external>$EXEC -v</external>
      <grep regexp=".*(LLVM|clang) version ([0-9.]*)" group="2"></grep>
    </version>
    &languages_c;
    <runtimes>kernel,rtp</runtimes>
    <target>&this_target;</target>
  </compiler_description>
'>

<!ENTITY compiler_description_gnat_llvm
'
  <compiler_description>
    <name>GNAT_LLVM-&this_target;</name>
    <executable prefix="1">((&this_target;)-llvm-)gnatls</executable>
    <version>
      <external>${PREFIX}gnatls -v</external>
      <grep regexp="^GNATLS.+?(\d+(\.\d+)?)" group="1"></grep>
    </version>
    <languages>Ada</languages>
    <variable name="gcc_version">
      <external>${PREFIX}gcc -v</external>
      <grep regexp="^[-\w]*gcc \S+ (\S+)" group="1"></grep>
    </variable>
    <runtimes default="kernel,rtp">
       <directory group="kernel" >\.\./lib/rts-kernel/adalib/</directory>
       <directory group="1" >\.\./lib/rts-(.*)/adalib/</directory>
    </runtimes>
    <target>&this_target;</target>
  </compiler_description>
'>

 <!-- On vxworks 22.06 and older the default TOOL and TOOL_FAMILY
      is gnu, so we need to specify llvm explicitly. The consequence
      is that the wrong header files are specified. (In practice, on
      versions of vxworks where the gnu personality has been retired,
      we override the default with llvm for the gnu toolchain, because
      it is compatible or can be made to be compatible. -->

<!ENTITY config_llvm_common_vx7r2_switches
'
   <config>
     package Compiler is
       for Leading_Required_Switches ("C") use
         Compiler &apos; Leading_Required_Switches ("C")
         &amp; ("-DTOOL_FAMILY=llvm",
                "-DTOOL=llvm");
     end Compiler;
     </config>
'>

<!ENTITY config_common_vx7r2_switches
'
   <config>
     package Compiler is
       for Dependency_Switches ("C") use ("-MMD", "-MF", "");
       for Leading_Required_Switches ("C") use
         Compiler &apos; Leading_Required_Switches ("C")
         &amp; ("-I" &amp; VSB_Dir &amp; "/h",
                "-I" &amp; VSB_Dir &amp; "/share/h",
                "-D_VSB_CONFIG_FILE=&lt;config/vsbConfig.h&gt;",
                "-D_IS_WRS",
                "-D__vxworks",
                "-D__VXWORKS__");
     end Compiler;
     </config>
'>

<!ENTITY config_kernel_vx7r2_switches
'
  <config>
    package Compiler is
      for Leading_Required_Switches ("C") use
        Compiler &apos; Leading_Required_Switches ("C")
        &amp; ("-I" &amp; VSB_Dir &amp; "/krnl/h/system",
               "-I" &amp; VSB_Dir &amp; "/krnl/h/public",
               "-D_WRS_KERNEL",
               "-D_WRS_KERNEL_SMP");
     end Compiler;
  </config>
'>

<!ENTITY config_rtp_vx7r2_switches
'
  <config>
    package Compiler is
      for Leading_Required_Switches ("C") use
        Compiler &apos; Leading_Required_Switches ("C")
        &amp; ("-I" &amp; VSB_Dir &amp; "/usr/h/public",
               "-I" &amp; VSB_Dir &amp; "/usr/h",
               "-D__RTP__",
               "-D_WRS_CONFIG_SMP");
    end Compiler;
  </config>
'>

<!ENTITY config_target_vx7r2_llvm_switches
'
  <config>
    package Compiler is
       case TARGET_C is
          when "aarch64-wrs-vxworks7r2" =>
             for Leading_Required_Switches ("C") use
                Compiler &apos; Leading_Required_Switches ("C")
                   &amp; ("-D_VX_CPU=_VX_ARMARCH8A",
                          "-DARMEL",
                          "-ffixed-x18");
          when "x86_64-wrs-vxworks7r2" =>
             for Leading_Required_Switches ("C") use
                Compiler &apos; Leading_Required_Switches ("C")
                   &amp; ("-D_VX_CPU=X86_64",
                          "-D_VX_CPU_FAMILY=_VX_I80X86",
                          "-D_VX_ARCH_DIR=I86");
          when "powerpc64-wrs-vxworks7r2" =>
             for Leading_Required_Switches ("C") use
                Compiler &apos; Leading_Required_Switches ("C")
                   &amp; ("-D_VX_CPU=PPC604",
                          "-D__PPC__",
                          "-D__powerpc__",
                          "-D__PPC64__",
                          "-D__powerpc64__");
          when others =>
             null;
       end case;
     end Compiler;
   </config>
'>

<!ENTITY config_target_ada_vx7r2_llvm_switches
'
  <config>
    package Compiler is
       case TARGET_ADA is
          when "aarch64-wrs-vxworks7r2" =>
             for Leading_Required_Switches ("Ada") use
                Compiler &apos; Leading_Required_Switches ("Ada")
                   &amp; ("-mreserve-x18");
          when others =>
             null;
       end case;
     end Compiler;
   </config>
'>

 <!-- On Vxworks7r2 the VSB is configured for a default processor type, this
      is used to specify the directory in which can be found libllvmcplus.a.
      which contains the functions found in libunwind.a on Linux targets. -->

<!ENTITY config_llvm_dkm_linker
'
   <config>
 package Linker is
    case TARGET_ADA is
       when "aarch64-wrs-vxworks7r2" =>
          for Required_Switches use
            Linker &apos; Required_Switches
            &amp; ("-L" &amp; VSB_Dir &amp; "/krnl/ARMARCH8A/common");
       when others =>
          null;
    end case;
    for Required_Switches use
      Linker &apos; Required_Switches &amp; ("-lllvmcplus", "--vxlink-llvm");
 end Linker;
   </config>
'>

<!ENTITY configurations_vx7r2_gnat_llvm
'
   <configuration>
      &if_these_gnat_llvm_compilers;
      &if_this_target;

      &config_target_ada_vx7r2_llvm_switches;
    </configuration>
    <configuration>
      &if_these_gnat_llvm_compilers;
      &if_this_target;

      &config_llvm_dkm_linker;
    </configuration>
'>

<!ENTITY configurations_vx7r2_clang
'
   <configuration>
      &if_these_clang_c_compilers;
      &if_this_target;

      &config_common_vx7r2_switches;
   </configuration>
   <configuration>
      &if_these_clang_c_compilers;
      &if_this_target;

      &config_llvm_common_vx7r2_switches;
   </configuration>
   <configuration>
      &if_these_clang_c_compilers;
      &if_this_target;

      &config_target_vx7r2_llvm_switches;
    </configuration>
   <configuration>
      &if_these_clang_c_compilers;
      &if_this_target;

      &config_target_ada_vx7r2_llvm_switches;   <!-- Needed for runtime build -->
    </configuration>
'>

<!ENTITY configurations_vx7r2_clang_kernel
'
   <configuration>
     &if_not_rtp;
     &if_these_clang_c_compilers;
     &if_this_target;

     &config_kernel_vx7r2_switches;
   </configuration>
   <configuration>
     &if_not_rtp;
     &if_these_clang_c_compilers;
     &if_this_target;

     &config_llvm_dkm_linker;
   </configuration>
'>

<!ENTITY configurations_vx7r2_clang_rtp
'
   <configuration>
     &if_rtp;
     &if_these_clang_c_compilers;
     &if_this_target;

     &config_rtp_vx7r2_switches;
    </configuration>
'>
