   <!ENTITY version_from_wind_base
    '<version>
      <getenv name="WIND_BASE"></getenv>
      <grep regexp=".*[/\\](vxworks-6[0-9.]*).*" group="1"></grep>
      <must_match>vxworks-6.*</must_match>
     </version>'
   >

   <!ENTITY runtimes_vx6
    '<runtimes>kernel,kernel-smp,kernel-sjlj,rtp,rtp-smp</runtimes>'
   >

   <!ENTITY gnat_pre_6.4
     '<compiler language="Ada" version="3.16" />
      <compiler language="Ada" version="5.00" />
      <compiler language="Ada" version="5.01" />
      <compiler language="Ada" version="5.02" />
      <compiler language="Ada" version="5.03" />
      <compiler language="Ada" version="5.04" />
      <compiler language="Ada" version="6.0" />
      <compiler language="Ada" version="6.1" />
      <compiler language="Ada" version="6.2" />
      <compiler language="Ada" version="6.3" />
      <compiler language="Ada" version="6.4" />'
   >

  <!ENTITY if_gnat_pre_6.4
   '<compilers>
       <compiler language="Ada" />
    </compilers>
    <compilers>
      &gnat_pre_6.4;
    </compilers>'
  >

  <!ENTITY if_gnat_post_6.4
   '<compilers>
       <compiler language="Ada" />
    </compilers>
    <compilers negate="true" >
      &gnat_pre_6.4;
    </compilers>'
  >

  <!ENTITY config_rtp_cflags
    '<config>
   package Compiler is
      for Leading_Required_Switches ("C") use
        Compiler &apos; Leading_Required_Switches ("C") &amp; ("-mrtp")
        &amp; ("-I" &amp; Wind_Base &amp; "/target/usr/h",
               "-I" &amp; Wind_Base &amp; "/target/usr/h/wrn/coreip");
   end Compiler;

   package Compiler is
      for Leading_Required_Switches ("C++") use
        Compiler &apos; Leading_Required_Switches ("C++") &amp; ("-mrtp")
        &amp; ("-I" &amp; Wind_Base &amp; "/target/usr/h",
               "-I" &amp; Wind_Base &amp; "/target/usr/h/wrn/coreip");
   end Compiler;
     </config>'
  >

  <!ENTITY config_kernel_cflags
    '<config>
   package Compiler is
      for Leading_Required_Switches ("C") use
        Compiler &apos; Leading_Required_Switches ("C")
        &amp; ("-I" &amp; Wind_Base &amp; "/target/h",
               "-I" &amp; Wind_Base &amp; "/target/h/wrn/coreip");
   end Compiler;

   package Compiler is
      for Leading_Required_Switches ("C++") use
        Compiler &apos; Leading_Required_Switches ("C++")
        &amp; ("-I" &amp; Wind_Base &amp; "/target/h",
               "-I" &amp; Wind_Base &amp; "/target/h/wrn/coreip");
   end Compiler;
     </config>'
  >

  <!ENTITY config_wrs_ar
    '<config>
   for Archive_Builder  use ("ar" &amp; "&this_gnu_wrs_suffix;", "cr");
   for Archive_Builder_Append_Option use ("q");
   for Archive_Indexer  use ("ranlib" &amp; "&this_gnu_wrs_suffix;");
   for Archive_Suffix   use ".a";
     </config>'
  >

  <!ENTITY config_wind_base
    '<config>
   Wind_Base := external ("WIND_BASE");
   Wind_Usr := external ("WIND_USR", Wind_Base &amp; "/target/usr/");
     </config>'
  >

  <!ENTITY configurations_vx6
  '
  <!--  Note: vx6 and vx6cert share the same target name, so
   	in configurations chunks are added into vx6-specific
        files if_this_target will match both vx6 and vx6cert.
        A way to discriminate the two kind of platforms is to
        use runtime names and compiler names.

        For now, however, we still have one global target-independant
        compiler for GNAT. So most of the following chuncks apply on
        both vx6 and vx6cert. In order to ease the maintenance,
        have a comment to make it explicit when they apply to both.
   -->

   <configuration>
     &if_this_target;
     <!-- vx6 and vx6cert -->

     &config_wind_base;
   </configuration>

   <configuration>
    &if_gnat_pre_6.4;
    &if_this_target;
    <!-- vx6 and vx6cert -->

    &config_wrs_ar;
   </configuration>

   <configuration>
    &if_gnat_post_6.4;
    &if_this_target;
    <!-- vx6 and vx6cert -->

    &config_gnat_ar;
   </configuration>

   <configuration>
    &if_no_ada;
    &if_this_target;
    <!-- vx6 and vx6cert -->

    &config_gnat_ar;
   </configuration>

   <configuration>
     &if_rtp_full;
     &if_this_target;
     <!-- vx6 -->

     &config_rtp_cflags;
   </configuration>

   <configuration>
     &if_kernel_full;
     &if_this_target;
     <!-- vx6 -->

     &config_kernel_cflags;
   </configuration>'
  >
