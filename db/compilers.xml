<?xml version="1.0" ?>
<gprconfig>
  <!--  Languages that require no compiler, but can be selected through
        -config -->
  <compiler_description>
    <languages>Project File</languages>
  </compiler_description>

  <!--    GCC 3.x & 4.x -->
  <compiler_description>
    <name>GCC</name>
    <executable prefix="1">(.*(-wrs-|-elf-|-eabispe-|avr-).*)?gcc</executable>
    <version>
      <external>${PREFIX}gcc --version</external>
      <grep regexp="\(GCC\) (\S+)" group="1"></grep>
    </version>
    <languages>C</languages>
    <target>
      <external>${PREFIX}gcc -dumpmachine</external>
      <grep regexp="[^\r\n]+"></grep>
    </target>
  </compiler_description>

  <!-- VxWorks 6 -->
  <!-- We need to distinguish version to correctly report runtimes.  -->
  <compiler_description>
    <name>GCC-WRS6</name>
    <executable prefix="1">cc(arm|pentium|sh|mips|ppc|sparc)</executable>
    <version>
      <getenv name="WIND_BASE"></getenv>
      <grep regexp=".*[/\\](vxworks-6[0-9.]*).*" group="1"></grep>
      <must_match>vxworks-6.*</must_match>
    </version>
    <languages>C</languages>
    <runtimes>kernel,rtp</runtimes>
    <target>
      <external>cc${PREFIX} -dumpmachine</external>
      <grep regexp="[^\r\n]+"></grep>
    </target>
  </compiler_description>

  <!-- VxWorks 5 -->
  <compiler_description>
    <name>GCC-WRS5</name>
    <executable prefix="1">cc(arm|pentium|sh|mips|ppc|sparc)</executable>
    <version>
      <external>cc${PREFIX} -v</external>
      <grep regexp=".*(VxWorks 5).*" group="1"></grep>
      <must_match>VxWorks 5</must_match>
    </version>
    <languages>C</languages>
    <target>
      <external>cc${PREFIX} -dumpmachine</external>
      <grep regexp="[^\r\n]+"></grep>
    </target>
  </compiler_description>

  <!-- VxWorks 653 -->
  <compiler_description>
    <name>GCC-WRS653</name>
    <executable prefix="1">cc(pentium|ppc)</executable>
    <version>
      <getenv name="WIND_BASE"></getenv>
      <grep regexp=".*(653).*" group="1"></grep>
      <must_match>653</must_match>
    </version>
    <languages>C</languages>
    <target>
      <external>cc${PREFIX} -dumpmachine</external>
      <grep regexp="[^\r\n]+"></grep>
    </target>
  </compiler_description>

  <!--     GCC 2.8.1
    There is no switch, in such versions, to find out the list of languages,
    so we just assume there is only C.
    C++ could be found by looking for the "g++" executable
  -->
  <compiler_description>
    <name>GCC-28</name>
    <executable>gcc</executable>
    <version>
      <external>gcc -v</external>
      <grep regexp="^gcc version (\S+)" group="1"></grep>
      <must_match>2\.8\.</must_match>
    </version>
    <languages>C</languages>
    <target>
      <external>gcc -dumpmachine</external>
      <grep regexp="[^\r\n]+"></grep>
    </target>
  </compiler_description>

  <!--  G++ compilers  -->
  <compiler_description>
    <name>G++</name>
    <executable>g++</executable>
    <version>
      <external>g++ --version</external>
      <grep regexp="\(GCC\) (\S+)" group="1"></grep>
    </version>
    <languages>C++</languages>
    <target>
      <external>g++ -dumpmachine</external>
      <grep regexp="[^\r\n]+"></grep>
    </target>
  </compiler_description>

  <!-- G++ for VxWorks 653 -->
  <compiler_description>
    <name>G++-WRS653</name>
    <executable prefix="1">c\+\+(pentium|ppc)</executable>
    <version>
      <getenv name="WIND_BASE"></getenv>
      <grep regexp=".*(653).*" group="1"></grep>
      <must_match>653</must_match>
    </version>
    <languages>C++</languages>
    <target>
      <external>c++${PREFIX} -dumpmachine</external>
      <grep regexp="[^\r\n]+"></grep>
    </target>
  </compiler_description>

  <!--  Assembler -->
  <compiler_description>
    <name>GCC-ASM</name>
    <executable prefix="1">(.*(-wrs-|-elf-|-eabispe-|avr-).*)?gcc</executable>
    <version>
      <external>${PREFIX}gcc --version</external>
      <grep regexp="\(GCC\) (\S+)" group="1"></grep>
    </version>
    <languages>Asm,Asm_Cpp,Asm2</languages>
    <target>
      <external>${PREFIX}gcc -dumpmachine</external>
      <grep regexp="[^\r\n]+"></grep>
    </target>
  </compiler_description>

   <!--   GNAT
    To find the list of supported runtimes, we check the contents of
    the directory. To be compatible with older versions of GNAT (3.16
    for instance), we also accept lib/gcc-lib as the directory that
    contains the runtime files.

    Implementation note: we put two spaces after -adainclude $... in
    the external_tool, because on windows the path will end with a
    '\', and this would act as a quote for the following space.
   -->
  <compiler_description>
    <name>GNAT</name>
    <executable prefix="1">(.*(-wrs-|-elf-|-eabispe-|avr-).*)?gnatmake</executable>
    <version>
      <external>${PREFIX}gnatls -v</external>
      <grep regexp="^GNATLS.+?(\d+\.\d+)" group="1"></grep>
    </version>
    <variable name="gcc_version">
      <external>${PREFIX}gcc -v</external>
      <grep regexp="^gcc version (\S+)" group="1"></grep>
    </variable>
    <languages>Ada</languages>
    <runtimes default="default,kernel">
       <directory group="default" >\.\./lib/gcc(-lib)?/$TARGET/$gcc_version/adalib/</directory>
       <directory group="2" >\.\./lib/gcc(-lib)?/$TARGET/$gcc_version/rts-(.*)/adalib/</directory>
    </runtimes>
    <target>
      <external>${PREFIX}gcc -dumpmachine</external>
      <grep regexp="[^\r\n]+"></grep>
    </target>
  </compiler_description>

  <!--    G77  -->
  <compiler_description>
    <name>G77</name>
    <executable>g77</executable>
    <version>
      <external>g77 --version</external>
      <grep regexp="\(GCC.*\) (\S+)" group="1"></grep>
    </version>
    <languages>Fortran</languages>
    <target>
      <external>g77 -dumpmachine</external>
      <grep regexp="[^\r\n]+"></grep>
    </target>
  </compiler_description>

  <!--    GFortran  -->
  <compiler_description>
    <name>GFORTRAN</name>
    <executable>gfortran</executable>
    <version>
      <external>gfortran --version</external>
      <grep regexp="\(GCC\) (\S+)" group="1"></grep>
    </version>
    <languages>Fortran</languages>
    <target>
      <external>gfortran -dumpmachine</external>
      <grep regexp="[^\r\n]+"></grep>
    </target>
  </compiler_description>

  <!--    mingw-cygwin compiler  -->
  <compiler_description>
    <name>GCC-CYGMING</name>
    <executable>gcc</executable>
    <version>
      <external>gcc --version</external>
      <grep regexp="\(GCC\) (\S+).*\(cygming special\)" group="1"></grep>
    </version>
    <languages>C,C++,Fortran</languages>
    <target>
      <external>gcc -mno-cygwin -dumpmachine</external>
      <grep regexp="[^\r\n]+"></grep>
    </target>
  </compiler_description>

  <compiler_description>
    <name>GCC-MINGW32</name>
    <executable prefix="1">gcc(-sjlj|)</executable>
    <version>
      <external>gcc${PREFIX} --version</external>
      <grep regexp="\(GCC\) (\S+).*\(mingw32.*\)" group="1"></grep>
    </version>
    <languages>C,C++,Fortran</languages>
    <target>
      <external>gcc${PREFIX} -dumpmachine</external>
      <grep regexp="[^\r\n]+"></grep>
    </target>
  </compiler_description>

</gprconfig>
