<?xml version="1.0" ?>
<gprconfig>
  <!--    GCC 3.x
    These versions of GCC provide no specific switch to get the list of
    supported languages, but we can parse the output of gcc -v.
    We filter out some of the languages, since for instance Ada is handled
    directly by GNAT, not through GCC (which doesn't necessarily have an
    Ada runtime installed anyway).
  -->
  <compiler_description>
    <name>GCC</name>
    <executable prefix="1">(.*(-wrs-|-elf-).*)?gcc</executable>
    <version>
      <external>${PREFIX}gcc --version</external>
      <grep regexp="\(GCC\) (\S+)" group="1"></grep>
    </version>
    <languages>C</languages>
    <target>
      <external>${PREFIX}gcc -dumpmachine</external>
      <grep regexp="[^\r\n]+"></grep>
    </target>
  </compiler_description>

  <compiler_description>
    <name>GCC-WRS</name>
    <executable prefix="1">cc(arm|pentium|sh|mips|ppc|sparc)</executable>
    <version>
      <external>cc${PREFIX} --version</external>
      <grep regexp="^cc.+ \(GCC\) ([0-9.]+)( [0-9]+)? \(Wind River" group="1"></grep>
    </version>
    <languages>C</languages>
    <runtimes>kernel,rtp</runtimes>
    <target>
      <external>cc${PREFIX} -dumpmachine</external>
      <grep regexp="[^\r\n]+"></grep>
    </target>
  </compiler_description>

  <compiler_description>
    <name>GCC-WRS653</name>
    <executable prefix="1">ccppc</executable>
    <version>
      <getenv name="WIND_BASE"></getenv>
      <grep regexp=".*/(vxworks653).*" group="1"></grep>
      <must_match>vxworks653</must_match>
    </version>
    <languages>C</languages>
    <runtimes>cert,zfp</runtimes>
    <target>powerpc-wrs-vxworksae</target>
  </compiler_description>

  <!--     GCC 2.8.1
    There is no switch, in such versions, to find out the list of languages,
    so we just assume there is only C.
    C++ could be found by looking for the "g++" executable
  -->
  <compiler_description>
    <name>GCC-28</name>
    <executable>gcc</executable>
    <version>
      <external>gcc -v</external>
      <grep regexp="^gcc version (\S+)" group="1"></grep>
      <must_match>2\.8\.</must_match>
    </version>
    <languages>C</languages>
    <target>
      <external>gcc -dumpmachine</external>
      <grep regexp="[^\r\n]+"></grep>
    </target>
  </compiler_description>

  <!--  G++ compilers
  -->

  <compiler_description>
    <name>G++</name>
    <executable>g++</executable>
    <version>
      <external>g++ --version</external>
      <grep regexp="\(GCC\) (\S+)" group="1"></grep>
    </version>
    <languages>C++</languages>
    <target>
      <external>g++ -dumpmachine</external>
      <grep regexp="[^\r\n]+"></grep>
    </target>
  </compiler_description>

  <compiler_description>
    <name>GCC-ASM</name>
    <executable prefix="1">(.*(-wrs-|-elf-).*)?gcc</executable>
    <version>
      <external>${PREFIX}gcc --version</external>
      <grep regexp="\(GCC\) (\S+)" group="1"></grep>
    </version>
    <languages>Asm</languages>
    <target>
      <external>${PREFIX}gcc -dumpmachine</external>
      <grep regexp="[^\r\n]+"></grep>
    </target>
  </compiler_description>

  <!--   GNAT
    To find the list of supported runtimes, we check the contents of the
    directory. To be compatible with older versions of GNAT (3.16 for instance),
    we also accept lib/gcc-lib as the directory that contains the runtime files.

    Implementation note: we put two spaces after -adainclude $... in the external_tool,
    because on windows the path will end with a '\', and this would act as a quote for
    the following space.
  -->
  <compiler_description>
    <name>GNAT</name>
    <executable prefix="1">(.*(-wrs-|-elf-).*)?gnatmake</executable>
    <version>
      <external>${PREFIX}gnatls -v</external>
      <grep regexp="GNATLS.+?(\d+\.\d+)" group="1"></grep>

      <external>${PREFIX}gcc -v</external>
      <grep regexp="^gcc version (\S+)" group="1"></grep>
    </version>
    <languages>Ada</languages>
    <runtimes>
       <directory group="default" >\.\./lib/gcc(-lib)?/$TARGET/$VERSION2/adalib/</directory>
       <directory group="2" >\.\./lib/gcc(-lib)?/$TARGET/$VERSION2/rts-(.*)/adalib/</directory>
    </runtimes>
    <target>
      <external>${PREFIX}gcc -dumpmachine</external>
      <grep regexp="[^\r\n]+"></grep>
    </target>
  </compiler_description>

 <!--    G77
  -->
  <compiler_description>
    <name>G77</name>
    <executable>g77</executable>
    <version>
      <external>g77 --version</external>
      <grep regexp="\(GCC.*\) (\S+)" group="1"></grep>
    </version>
    <languages>Fortran</languages>
    <target>
      <external>g77 -dumpmachine</external>
      <grep regexp="[^\r\n]+"></grep>
    </target>
  </compiler_description>

 <!--    GFortran
  -->
  <compiler_description>
    <name>GFORTRAN</name>
    <executable>gfortran</executable>
    <version>
      <external>gfortran --version</external>
      <grep regexp="\(GCC\) (\S+)" group="1"></grep>
    </version>
    <languages>Fortran</languages>
    <target>
      <external>gfortran -dumpmachine</external>
      <grep regexp="[^\r\n]+"></grep>
    </target>
  </compiler_description>

 <!--    mingw-cygwin compiler
  -->
  <compiler_description>
    <name>GCC-CYGMING</name>
    <executable>gcc</executable>
    <version>
      <external>gcc --version</external>
      <grep regexp="\(GCC\) (\S+).*\(cygming special\)" group="1"></grep>
    </version>
    <languages>C,C++,Fortran</languages>
    <target>
      <external>gcc -mno-cygwin -dumpmachine</external>
      <grep regexp="[^\r\n]+"></grep>
    </target>
  </compiler_description>
</gprconfig>
