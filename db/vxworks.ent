   <!ENTITY target_from_wrs_gnu_cc
    '<target>
      <external>cc${PREFIX} -dumpmachine</external>
      <grep regexp="[^\r\n]+"></grep>
     </target>'
   >

   <!ENTITY target_from_wrs_gnu_cpp
    '<target>
      <external>c++${PREFIX} -dumpmachine</external>
      <grep regexp="[^\r\n]+"></grep>
    </target>'
   >

   <!ENTITY config_mrtp
    '<config>
  package Linker is
     for Required_Switches use
  	Linker &apos; Required_Switches &amp; ("-mrtp");
  end Linker;
    </config>'
   >

   <!ENTITY config_mlongcall_c
     '<config>
   package Compiler is
      case TARGET_C is
         when "arm-wrs-vxworks" =>
           for Leading_Required_Switches ("C") use
             Compiler &apos; Leading_Required_Switches ("C")
             &amp; ("-mlong-calls");

         when "powerpc-wrs-vxworks" =>
           for Leading_Required_Switches ("C") use
             Compiler &apos; Leading_Required_Switches ("C")
             &amp; ("-mlongcall");
        when others =>
           null;
      end case;
   end Compiler;
     </config>'
   >

   <!ENTITY config_mlongcall_cpp
     '<config>
   package Compiler is
      case TARGET_CPP is
         when "arm-wrs-vxworks" =>
           for Leading_Required_Switches ("C++") use
             Compiler &apos; Leading_Required_Switches ("C++")
             &amp; ("-mlong-calls");

         when "powerpc-wrs-vxworks" =>
           for Leading_Required_Switches ("C++") use
             Compiler &apos; Leading_Required_Switches ("C++")
             &amp; ("-mlongcall");

        when others =>
           null;
      end case;
   end Compiler;
     </config>'
   >

  <!ENTITY if_target_gpp
    '<targets>
       <target name="^.*-wrs-vxworks$" />
       <target name="^.*-wrs-vxworks7$" />
     </targets>'>

  <!ENTITY if_rtp
    '<compilers>
      <compiler runtime="^rtp$" />
      <compiler runtime="^rtp-smp$" />
     </compilers>'
  >

  <!ENTITY if_kernel
    '<compilers>
       <compiler runtime="^kernel$" />
       <compiler runtime="^kernel-sjlj$" />
       <compiler runtime="^kernel-smp$" />
     </compilers>'
  >

  <!ENTITY if_ada_rtp
    '<compilers>
      <compiler name="GNAT" runtime="^rtp$" />
      <compiler name="GNAT" runtime="^rtp-smp$" />
     </compilers>'
  >

  <!ENTITY config_ada_rtp
    '<config>
   package Compiler is
      for Leading_Required_Switches ("Ada") use
        Compiler &apos; Leading_Required_Switches ("Ada") &amp; ("-mrtp");
   end Compiler;
     </config>'
  >

  <!ENTITY config_e500v2_cflags
    '<config>
   package Compiler is
      for Leading_Required_Switches ("C") use
        Compiler &apos; Leading_Required_Switches ("C")
        &amp; ("-te500v2", "-fno-implicit-fp");

      for Leading_Required_Switches ("C++") use
        Compiler &apos; Leading_Required_Switches ("C++")
        &amp; ("-te500v2", "-fno-implicit-fp");
   end Compiler;
     </config>'
  >

  <!ENTITY configurations_vxworks_gpp
  '
  <configuration>
    &if_rtp;
    &if_this_target;

    &config_mrtp;
  </configuration>

   <!-- mlongcall is passed by default in the case of GNAT.
        Do the same thing for WRS compilers for consistency.  -->

   <configuration>
     &if_these_c_compilers;
     &if_this_target;

     &config_mlongcall_c;
   </configuration>

   <configuration>
     &if_these_cpp_compilers;
     &if_this_target;

     &config_mlongcall_cpp;
   </configuration>'
  >
